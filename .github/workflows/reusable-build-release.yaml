name: build

on:
  workflow_call:
    inputs:
      ucc_gen_version:
        description: "ucc-gen version to install"
        required: false
        type: string
        default: "5.19.0"
    secrets:
      SPLUNKBASE_USER:
        description: "Splunkbase username"
        required: false
      SPLUNKBASE_PASSWORD:
        description: "Splunkbase password"
        required: false

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      addon_name: ${{ steps.addon_name.outputs.ADDON_NAME }}
      addon_version: ${{ steps.addon_version.outputs.ADDON_VERSION }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - run: |
          pip install crudini==0.9.3
      - name: Get version
        id: addon_version
        run: |
          ADDON_VERSION=$(crudini --get package/default/app.conf launcher version)
          echo "::set-output name=ADDON_VERSION::$ADDON_VERSION"
      - name: Get addon name
        id: addon_name
        run: |
          ADDON_NAME=$(crudini --get package/default/app.conf package id)
          echo "::set-output name=ADDON_NAME::$ADDON_NAME"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade splunk-packaging-toolkit==1.0.1 splunk-add-on-ucc-framework==${{ inputs.ucc_gen_version }}
      - name: Building app
        run: |
          ucc-gen --ta-version ${{ steps.addon_version.outputs.ADDON_VERSION }}
      - name: Fix file permissions
        # This step is needed to workaround issue with Github Actions.
        # For more information check out https://github.com/splunk/addonfactory-ucc-generator/issues/425.
        run: |
          chmod 644 output/${{ steps.addon_name.outputs.ADDON_NAME }}/appserver/static/js/build/*
          chmod 644 output/${{ steps.addon_name.outputs.ADDON_NAME }}/appserver/static/js/dependencies.txt
          # If there is no .png files under static directory, it gives an error.
          chmod 644 output/${{ steps.addon_name.outputs.ADDON_NAME }}/appserver/static/*.png || true
          chmod 644 output/${{ steps.addon_name.outputs.ADDON_NAME }}/appserver/templates/*
          chmod 644 output/${{ steps.addon_name.outputs.ADDON_NAME }}/default/data/ui/nav/default.xml
          if [ -f output/${{ steps.addon_name.outputs.ADDON_NAME }}/default/data/ui/views/configuration.xml ]; then
            chmod 644 output/${{ steps.addon_name.outputs.ADDON_NAME }}/default/data/ui/views/configuration.xml
          fi
          if [ -f output/${{ steps.addon_name.outputs.ADDON_NAME }}/default/data/ui/views/inputs.xml ]; then
            chmod 644 output/${{ steps.addon_name.outputs.ADDON_NAME }}/default/data/ui/views/inputs.xml
          fi
      - name: Packaging app
        run: |
          mkdir dist
          slim package output/${{ steps.addon_name.outputs.ADDON_NAME }} -o dist/
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.addon_name.outputs.ADDON_NAME }}-${{ steps.addon_version.outputs.ADDON_VERSION }}.tar.gz
          path: dist/

  appinspect-cli:
    name: appinspect-cli ${{ matrix.tags }}
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: build
    strategy:
      matrix:
        tags:
          - "cloud"
          - "appapproval"
          - "deprecated_feature"
          - "developer_guidance"
          - "future"
          - "self-service"
          - "splunk_appinspect"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.7"
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.ADDON_NAME }}-${{ needs.build.outputs.ADDON_VERSION }}.tar.gz
          path: dist
      - uses: splunk/appinspect-cli-action@v1.7
        with:
          app_path: dist/${{ needs.build.outputs.ADDON_NAME }}-${{ needs.build.outputs.ADDON_VERSION }}.tar.gz
          included_tags: ${{ matrix.tags }}
      - uses: actions/upload-artifact@v3
        with:
          name: appinspect_result_${{ matrix.tags }}.json
          path: appinspect_result.json

  check-splunkbase-credentials:
    runs-on: ubuntu-latest
    outputs:
      AVAILABLE: ${{ steps.check-splunkbase-credentials.outputs.AVAILABLE }}
    needs: build
    steps:
      - id: check-splunkbase-credentials
        run: |
          if [ ! -z "${{ secrets.SPLUNKBASE_USER }}" ] && [ ! -z "${{ secrets.SPLUNKBASE_PASSWORD }}" ]; then
            echo "::set-output name=AVAILABLE::true"
          fi

  appinspect-api:
    runs-on: ubuntu-latest
    needs:
      - build
      - check-splunkbase-credentials
    if: ${{ needs.check-splunkbase-credentials.outputs.AVAILABLE == 'true' }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.7"
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.build.outputs.ADDON_NAME }}-${{ needs.build.outputs.ADDON_VERSION }}.tar.gz
          path: dist
      - uses: splunk/appinspect-api-action@v2
        with:
          filePath: dist/${{ needs.build.outputs.ADDON_NAME }}-${{ needs.build.outputs.ADDON_VERSION }}.tar.gz
          splunkUser: ${{ secrets.SPLUNKBASE_USER }}
          splunkPassword: ${{ secrets.SPLUNKBASE_PASSWORD }}
